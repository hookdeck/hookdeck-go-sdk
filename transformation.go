// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/hookdeck/hookdeck-go-sdk/core"
	time "time"
)

type TransformationCreateRequest struct {
	// A unique, human-friendly name for the transformation
	Name string `json:"name" url:"-"`
	// JavaScript code to be executed as string
	Code string `json:"code" url:"-"`
	// Key-value environment variables to be passed to the transformation
	Env *core.Optional[map[string]string] `json:"env,omitempty" url:"-"`
}

type TransformationListRequest struct {
	Id      []*string                         `json:"-" url:"id,omitempty"`
	Name    *string                           `json:"-" url:"name,omitempty"`
	OrderBy *TransformationListRequestOrderBy `json:"-" url:"order_by,omitempty"`
	Dir     *TransformationListRequestDir     `json:"-" url:"dir,omitempty"`
	Limit   *int                              `json:"-" url:"limit,omitempty"`
	Next    *string                           `json:"-" url:"next,omitempty"`
	Prev    *string                           `json:"-" url:"prev,omitempty"`
}

type TransformationListExecutionRequest struct {
	LogLevel  *TransformationListExecutionRequestLogLevel `json:"-" url:"log_level,omitempty"`
	WebhookId []*string                                   `json:"-" url:"webhook_id,omitempty"`
	IssueId   []*string                                   `json:"-" url:"issue_id,omitempty"`
	CreatedAt *time.Time                                  `json:"-" url:"created_at,omitempty"`
	OrderBy   *TransformationListExecutionRequestOrderBy  `json:"-" url:"order_by,omitempty"`
	Dir       *TransformationListExecutionRequestDir      `json:"-" url:"dir,omitempty"`
	Limit     *int                                        `json:"-" url:"limit,omitempty"`
	Next      *string                                     `json:"-" url:"next,omitempty"`
	Prev      *string                                     `json:"-" url:"prev,omitempty"`
}

type TransformationRunRequest struct {
	// Key-value environment variables to be passed to the transformation
	Env *core.Optional[map[string]string] `json:"env,omitempty" url:"-"`
	// ID of the connection to use for the execution `context`
	WebhookId *core.Optional[string] `json:"webhook_id,omitempty" url:"-"`
	// JavaScript code to be executed
	Code *core.Optional[string] `json:"code,omitempty" url:"-"`
	// Transformation ID
	TransformationId *core.Optional[string] `json:"transformation_id,omitempty" url:"-"`
	// Request input to use for the transformation execution
	Request *core.Optional[TransformationRunRequestRequest] `json:"request,omitempty" url:"-"`
	EventId *core.Optional[string]                          `json:"event_id,omitempty" url:"-"`
}

type TransformationListExecutionRequestDir string

const (
	TransformationListExecutionRequestDirAsc  TransformationListExecutionRequestDir = "asc"
	TransformationListExecutionRequestDirDesc TransformationListExecutionRequestDir = "desc"
)

func NewTransformationListExecutionRequestDirFromString(s string) (TransformationListExecutionRequestDir, error) {
	switch s {
	case "asc":
		return TransformationListExecutionRequestDirAsc, nil
	case "desc":
		return TransformationListExecutionRequestDirDesc, nil
	}
	var t TransformationListExecutionRequestDir
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TransformationListExecutionRequestDir) Ptr() *TransformationListExecutionRequestDir {
	return &t
}

type TransformationListExecutionRequestLogLevel string

const (
	TransformationListExecutionRequestLogLevelDebug TransformationListExecutionRequestLogLevel = "debug"
	TransformationListExecutionRequestLogLevelInfo  TransformationListExecutionRequestLogLevel = "info"
	TransformationListExecutionRequestLogLevelWarn  TransformationListExecutionRequestLogLevel = "warn"
	TransformationListExecutionRequestLogLevelError TransformationListExecutionRequestLogLevel = "error"
	TransformationListExecutionRequestLogLevelFatal TransformationListExecutionRequestLogLevel = "fatal"
)

func NewTransformationListExecutionRequestLogLevelFromString(s string) (TransformationListExecutionRequestLogLevel, error) {
	switch s {
	case "debug":
		return TransformationListExecutionRequestLogLevelDebug, nil
	case "info":
		return TransformationListExecutionRequestLogLevelInfo, nil
	case "warn":
		return TransformationListExecutionRequestLogLevelWarn, nil
	case "error":
		return TransformationListExecutionRequestLogLevelError, nil
	case "fatal":
		return TransformationListExecutionRequestLogLevelFatal, nil
	}
	var t TransformationListExecutionRequestLogLevel
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TransformationListExecutionRequestLogLevel) Ptr() *TransformationListExecutionRequestLogLevel {
	return &t
}

type TransformationListExecutionRequestOrderBy string

const (
	TransformationListExecutionRequestOrderByCreatedAt TransformationListExecutionRequestOrderBy = "created_at"
)

func NewTransformationListExecutionRequestOrderByFromString(s string) (TransformationListExecutionRequestOrderBy, error) {
	switch s {
	case "created_at":
		return TransformationListExecutionRequestOrderByCreatedAt, nil
	}
	var t TransformationListExecutionRequestOrderBy
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TransformationListExecutionRequestOrderBy) Ptr() *TransformationListExecutionRequestOrderBy {
	return &t
}

type TransformationListRequestDir string

const (
	TransformationListRequestDirAsc  TransformationListRequestDir = "asc"
	TransformationListRequestDirDesc TransformationListRequestDir = "desc"
)

func NewTransformationListRequestDirFromString(s string) (TransformationListRequestDir, error) {
	switch s {
	case "asc":
		return TransformationListRequestDirAsc, nil
	case "desc":
		return TransformationListRequestDirDesc, nil
	}
	var t TransformationListRequestDir
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TransformationListRequestDir) Ptr() *TransformationListRequestDir {
	return &t
}

type TransformationListRequestOrderBy string

const (
	TransformationListRequestOrderByCreatedAt TransformationListRequestOrderBy = "created_at"
)

func NewTransformationListRequestOrderByFromString(s string) (TransformationListRequestOrderBy, error) {
	switch s {
	case "created_at":
		return TransformationListRequestOrderByCreatedAt, nil
	}
	var t TransformationListRequestOrderBy
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TransformationListRequestOrderBy) Ptr() *TransformationListRequestOrderBy {
	return &t
}

// Request input to use for the transformation execution
type TransformationRunRequestRequest struct {
	// Headers of the request
	Headers map[string]string `json:"headers,omitempty" url:"headers,omitempty"`
	// Body of the request
	Body *TransformationRunRequestRequestBody `json:"body,omitempty" url:"body,omitempty"`
	// Path of the request
	Path *string `json:"path,omitempty" url:"path,omitempty"`
	// String representation of the query params of the request
	Query *string `json:"query,omitempty" url:"query,omitempty"`
	// JSON representation of the query params
	ParsedQuery *TransformationRunRequestRequestParsedQuery `json:"parsed_query,omitempty" url:"parsed_query,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (t *TransformationRunRequestRequest) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationRunRequestRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationRunRequestRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationRunRequestRequest(value)

	extraProperties, err := core.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties

	t._rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationRunRequestRequest) String() string {
	if len(t._rawJSON) > 0 {
		if value, err := core.StringifyJSON(t._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationUpdateRequest struct {
	// A unique, human-friendly name for the transformation
	Name *core.Optional[string] `json:"name,omitempty" url:"-"`
	// JavaScript code to be executed
	Code *core.Optional[string] `json:"code,omitempty" url:"-"`
	// Key-value environment variables to be passed to the transformation
	Env *core.Optional[map[string]string] `json:"env,omitempty" url:"-"`
}

type TransformationUpsertRequest struct {
	// A unique, human-friendly name for the transformation
	Name string `json:"name" url:"-"`
	// JavaScript code to be executed as string
	Code string `json:"code" url:"-"`
	// Key-value environment variables to be passed to the transformation
	Env *core.Optional[map[string]string] `json:"env,omitempty" url:"-"`
}
