// This file was auto-generated by Fern from our API Definition.

package api

import (
	fmt "fmt"
	time "time"
)

type EventListRequest struct {
	Id             []*string                `json:"-" url:"id,omitempty"`
	Status         *EventStatus             `json:"-" url:"status,omitempty"`
	WebhookId      []*string                `json:"-" url:"webhook_id,omitempty"`
	DestinationId  []*string                `json:"-" url:"destination_id,omitempty"`
	SourceId       []*string                `json:"-" url:"source_id,omitempty"`
	Attempts       *int                     `json:"-" url:"attempts,omitempty"`
	ResponseStatus *int                     `json:"-" url:"response_status,omitempty"`
	SuccessfulAt   *time.Time               `json:"-" url:"successful_at,omitempty"`
	CreatedAt      *time.Time               `json:"-" url:"created_at,omitempty"`
	ErrorCode      *AttemptErrorCodes       `json:"-" url:"error_code,omitempty"`
	CliId          *string                  `json:"-" url:"cli_id,omitempty"`
	LastAttemptAt  *time.Time               `json:"-" url:"last_attempt_at,omitempty"`
	SearchTerm     *string                  `json:"-" url:"search_term,omitempty"`
	Headers        *string                  `json:"-" url:"headers,omitempty"`
	Body           *string                  `json:"-" url:"body,omitempty"`
	ParsedQuery    *string                  `json:"-" url:"parsed_query,omitempty"`
	Path           *string                  `json:"-" url:"path,omitempty"`
	CliUserId      []*string                `json:"-" url:"cli_user_id,omitempty"`
	IssueId        []*string                `json:"-" url:"issue_id,omitempty"`
	EventDataId    []*string                `json:"-" url:"event_data_id,omitempty"`
	BulkRetryId    []*string                `json:"-" url:"bulk_retry_id,omitempty"`
	Include        *string                  `json:"-" url:"include,omitempty"`
	OrderBy        *EventListRequestOrderBy `json:"-" url:"order_by,omitempty"`
	Dir            *EventListRequestDir     `json:"-" url:"dir,omitempty"`
	Limit          *int                     `json:"-" url:"limit,omitempty"`
	Next           *string                  `json:"-" url:"next,omitempty"`
	Prev           *string                  `json:"-" url:"prev,omitempty"`
}

// Sort direction
type EventListRequestDir string

const (
	EventListRequestDirAsc  EventListRequestDir = "asc"
	EventListRequestDirDesc EventListRequestDir = "desc"
)

func NewEventListRequestDirFromString(s string) (EventListRequestDir, error) {
	switch s {
	case "asc":
		return EventListRequestDirAsc, nil
	case "desc":
		return EventListRequestDirDesc, nil
	}
	var t EventListRequestDir
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EventListRequestDir) Ptr() *EventListRequestDir {
	return &e
}

// Sort key
type EventListRequestOrderBy string

const (
	EventListRequestOrderByLastAttemptAt EventListRequestOrderBy = "last_attempt_at"
	EventListRequestOrderByCreatedAt     EventListRequestOrderBy = "created_at"
)

func NewEventListRequestOrderByFromString(s string) (EventListRequestOrderBy, error) {
	switch s {
	case "last_attempt_at":
		return EventListRequestOrderByLastAttemptAt, nil
	case "created_at":
		return EventListRequestOrderByCreatedAt, nil
	}
	var t EventListRequestOrderBy
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (e EventListRequestOrderBy) Ptr() *EventListRequestOrderBy {
	return &e
}
